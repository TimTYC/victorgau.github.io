{"pages":[{"url":"http://victorgau.github.io/investment-thoughts.html","text":"(adsbygoogle = window.adsbygoogle || []).push({}); 其實是投機！不是投資！那股票可以賺錢嗎？ 關於這個問題，我喜歡陳江挺在《炒股的智慧》裡面的說法： \"股票遊戲是概率的遊戲，沒有百分之百這回事。只有隨著經驗的增加，你才可能將預測股票運動的正確率從50%提高到60%、70%。就算你能有70%的正確率，若不遵循「截短虧損，讓利潤奔跑」的原則，到頭來可能還是白忙一場。\" 從機率的角度來看，如果您買股的方式是用亂猜的，您猜中股票上漲或下跌的機率各是50%，如果您下注的錢都每次都一樣，長期來講，您的投機應該不分勝負，也就是不賺不賠。 如果經過有系統的研究股票，您將勝率提高到60%或更多，長期來說，您的投機應該是會獲利的。 但是就如同陳江挺所說的一樣，您必須做好資金控管，不然還是很容易賠錢的。 玩股票賺錢算是一種技能嗎？ 對我來說，股票是一種概率遊戲。 找出規則提高勝率，然後做好資金控管，使得期望值大於零。 從這當中，可以得到很多樂趣： 一方面是觀察群眾的反應，另一方面是享受判斷正確的獲利。 對一些認真過生活的長輩來說，他們無法理解這樣的思考過程，只是覺得玩股票是在賭博、浪費時間、不務正業。 他們或許不會禁止你玩股票，但是可能打從心裡的覺得不以為然… 偏偏玩股票又是一門知易行難的學問，大部分人都可以講出一段他們的道理，使得玩股票賺錢，如果不是賺到很大一筆錢，如果沒有持續賺到很大一筆錢，那它怎麼看都不算一種技能。 就是這樣！賺錢不太會被認同，沒有賺錢容易被奚落… 想要將玩股票賺錢當作一種技能，需要做好很多心理準備… 投資心態的轉變 剛開始玩股票的時候野心很大，心裡最想買到的是轉機股。 所以，常常用股票篩選工具去找跌到52週新低的股票，然後去讀它的新聞，看它的財務報表，如果覺得有希望翻轉，就會買一些來看看。 不過獲利狀況不好，買過的有幾家後來倒了。 之後，我一直研究財務報表。因為巴菲特喜歡看公司的財務報表，而很顯然的它似乎有看到一些不一樣的東西。 我心裡想著，如果我努力研究財務報表，搞不好我也可以看到一些別人沒有看到的東西，然後迅速致富。 光是財務報表分析的書，我就買了四五本以上，不過，看了那麼多年，好像也沒有看出所以然來。 再之後，我開始用簡單的線圖，配合簡單的財務分析，不再想說有可能一夕致富，只希望賺點微薄的收入， 判斷錯誤就止損，股價往上跑就Hold住，賺到一定程度就脫手。咦！反而這樣，好像行的通！… :p 技術分析有用嗎？ 按照《漫步華爾街》的說法，技術分析是完全沒有根據而且一點用都沒有的，主要的用處是券商用來鼓勵投資人進出，以賺進手續費。 但是以常理來說，當股價偏離趨勢線太多，大家自然而然會覺得股價會拉回。 即使你不覺得股價會拉回，只要大部分的人覺得股價會被拉回，股價就會被拉回。 股價反應的是群眾心理。 所以，我個人認為技術分析多多少少是具有一點參考價值的！ 那要怎麼使用技術分析呢？ 安德烈科斯托蘭尼說，他不是太相信技術分析，但是在他漫長的投機生涯中，有兩種線型的確讓他躲過好幾次災難：Ｍ型頂跟Ｗ型底。 在海龜交易法則中，海龜們主要用的只是簡單的軌道穿越系統。 基本分析有用嗎？ 根據《漫步華爾街》裡面的說法： Benjamin Graham 在他去世前不久，曾經過說：「… 我不再熱心提倡利用種種證券分析方法，尋找優良的投資機會。在四十年前這曾經是值得的，但是情況已然改變… 。現在我懷疑這種殫精竭慮的努力能和其代價相當。… 我現在讚成效率市場的想法。…」 另外，杜拉克在1998年說過：「我們將學會依賴現金流量表，因為任何一個會計系二年級的學生都知道如何玩弄損益表。」 總之，越來越明顯的一件事情就是，純粹依賴財務報表來評估一家公司的方法已經越來越不可靠。評估一家公司，越來越需要從多方面的角度來切入。這也使得股票投機越來越像是藝術而不是科學！ 股票有趣跟恐怖的地方 如果你已經非常熟悉複利報酬率, 那你就知道股票有趣跟恐怖的地方在哪裡了! 如果你真的看的很準, 知道哪一張股票會漲, 很快的你就可以讓你的資產加倍. 但是, 你每次下注的時候, 本金跟獲利都要再投回去, 才會有複利報酬的結果. 那萬一其中一次, 你看錯了, 那怎麼辦?… 那… 就要趕快止損啊… (如果沒有趕快止損, 你就會深刻體會到股票恐怖的地方了, 通常股票在跌, 是比在漲的時候快很多的!) 所以,我的建議是, 如果還看的沒有那麼準, 建議先買各產業的龍頭股跟積優股, 然後盡量不要買交易量太小的股票, 以免看錯的時候賣不掉! 等對股市非常熟悉之後, 再去挑那種可以打出十幾壘安打的股票! 大師說的話要聽進去 巴菲特 \"別人貪心的時候，我會恐懼；別人恐懼的時候，我會貪心。\" 傑西．李佛摩 \"大錢是「坐著等」賺來的，不是藉由思考賺來的，只有在市場上所有因素都對自己有利時才進場交易。\"(傑西．李佛摩股市操盤術) 彼得林區 \"假使你喜歡這家公司的產品，你也會喜歡他們的股票。\"(股市神童 p21) 班傑明葛拉姆 假使你運用了任何比代數還難的數學去評估股票，那你就白費力氣了。(股市神童 p32) 安德列科斯托蘭尼 真正的投機家是思考的人，但很多人卻認為投機家是不用工作的人。","tags":"股票","title":"投資心得整理"},{"url":"http://victorgau.github.io/investment-terms.html","text":"(adsbygoogle = window.adsbygoogle || []).push({}); 什麼是本益比 (Price Earning Ratio, PER)？ 簡單的說，本益比(PER)指的是投資人願意花多少錢來賺一塊錢。譬如說，PER=10 表示投資人願意花 10 塊錢來賺 1 塊錢。PER=20 表示投資人願意花 20 塊錢來賺 1 塊錢。 本益比的倒數 (1/PER) 可以被想像成是獲利率。譬如說，PER=10 表示利率大概是 10%，PER=20 表示利益大概是 5%。 一般我們在投資的時候，其實都是在比較利率，譬如說銀行利率 2%，投資某張股票預期是 10%，那你就可能會偏向投資股票。 問題來了，如果本益比或者本益比的倒數那麼好用，那我就根據本益比來買股票就好了啊？這樣不是穩賺的嗎？ 問題在於， 本益比是基於過去的盈餘來計算的 ，而一個公司的盈餘在未來可能有很大的不確定性。當你將錢存在銀行獲利 2% 的風險是 0 ，而投資股票獲利的風險是不確定的。 本益比就是本金跟利益的比率，這裡的本金指的是股價(Price)，利益指的是每股盈餘(Earning)。 本益比公式如下： \\(PER=\\frac{price}{earning}\\) 很簡單的就可以看出來，要買一張股票最重要的指標之一，就是這一家公司未來的盈餘。想要知道一家公司未來的盈餘，你可能需要詳讀這一家公司的財務報表、了解這一家公司的產品、並且要注意這一家公司的新聞，才有辦法評估出來。 什麼是股市回檔？什麼是空頭市場？ 彼得林區在他的書『致富之路』裡面是這樣定義的： 當股價平均下跌 10% 時，股市的術語稱為「回檔」(Correction)。 當股價下跌超過 25% 時，我們稱為「空頭市場」(Bear Market)。 什麼是 72 法則 (The Rule of 72)？ Q: 如果你的資產，每年以 20% 的速度在增長，幾年後你的資產會變成兩倍呢？ A: 速算法 72 / 20 = 3.6．所以大概是 3.6 年會翻倍． 參考 這裡 。 72 法則的應用 假設你非常會投資，看中的股票短期內都會漲，所以你喜歡頻繁的交易（雖然大部分人都告訴你，選對好股，買進並持有）． 假設你每次交易都可以有 20% 的獲利，那你要交易幾次資產才會加倍呢？ 72/20 = 3.6， 所以你大概要交易四次，你的資產才會加倍． 假設這四次交易分別花掉 1, 2, 3, 4 個月， 那麼你在 1+2+3+4=10 個月後，資產就會變成兩倍． 必須注意的是，你在做下一筆交易的時候，必須把前一筆賺的也都投進去．這樣才符合 72 法則的估計方式． 什麼是年複利報酬率？ 年複利報酬率是買進並持有股票的賺錢方式． 舉例說明： 如果你真的選到一張很棒的股票，每一年以 20% 的速度成長．如果你投入1000塊美金，一年後他就會變成 1000 x (1.2) = 1200 塊美金． 因為在第二年的時候，你投入的金額變成了 1200 塊美金，所以第二年過後，你的資產就會變成 1200 x (1.2) = 1440 塊美金． 經過五年後，你的資產就會變成 1000 x (1.2)&#94;5 = 2488.32． 選對好股，長期持有，五年的時間，資產翻了快 2.5 倍！ 什麼是會計恆等式？ 會計恆等式就是：資產 = 負債 + 股東權益 簡單來說： 整個公司的資產，等於公司向銀行借的錢加上股東出的錢。 公司跟銀行借的錢要付利息。 公司使用股東的錢不用付利息，但是公司如果有賺錢，必須把賺的錢按照持股的多寡分給股東。 技術分析跟順勢投資的差別？ 我自己覺得這兩個名詞差異不大，不過從書本上看來， 他們主要的差異在於 技術分析 著重在\" 預測未來 \"， 而 順勢投資 著重在\" 判斷趨勢 \"。 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); var location_protocol = (false) ? 'https' : document.location.protocol; if (location_protocol !== 'http' && location_protocol !== 'https') location_protocol = 'https:'; mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"股票","title":"投資名詞整理"},{"url":"http://victorgau.github.io/financial-statement-analysis.html","text":"(adsbygoogle = window.adsbygoogle || []).push({}); 四大財務報表： 資產負債表 損益表 現金流量表 股東權益變動表 財務報表分析主要包含四部分：獲利能力分析、經營效率分析、償債能力分析、財務結構分析。 獲利能力分析： 毛利率 營業利益率 資產報酬率 股東權益報酬率 經營效率分析： 應收帳款周轉率 應收帳款周轉天數 存貨周轉率 存貨周轉天數 總資產周轉率 償債能力分析： 流動比率 速動比率 利息保障倍數 財務結構分析： 股東權益佔資產比率 負債佔資產比率 長期資金佔固定資產比率 會計花招：(如何美化財務報表來欺騙投資人？) (Under Construction) 相關連結： 公開資訊觀測站 U.S. Securities and Exchange Commission NASDAQ NYSE 台灣證券交易所 台灣期貨交易所 財報狗","tags":"股票","title":"財務報表分析"},{"url":"http://victorgau.github.io/investment-related-urls.html","text":"(adsbygoogle = window.adsbygoogle || []).push({}); 景氣指標 財政部 經濟部 經建會 景氣指標查詢系統 常用經濟統計用語解釋 內政部 主計處 中央銀行 券商 E-TRADE Fidelity Scottrade 兆豐證券 社群&討論區 e-Stock 發財網 聚財網 鉅亨網 鉅亨網全球財經資料 程式交易聚寶盆 投資相關 蘋果財經 Yam天空財金 經濟日報 華爾街日報 WSJ ASIA 雅虎台灣財經 雅虎香港財經 Google Finance Yahoo Finance MSN moneycentral Warren Buffett's Letters to Berkshire Shareholders Investor's Business Daily (IDB) Bloomberg即時市場行情 MoneyDJ 理財網 Voice of America 中央社商情網 國際股市商品匯率行情","tags":"股票","title":"投資相關連結"},{"url":"http://victorgau.github.io/creating-virtual-environment-using-conda.html","text":"(adsbygoogle = window.adsbygoogle || []).push({}); # 檢查 conda 的版本 conda - V # 更新 conda conda update conda # 建立 virtual environment conda create - n yourenvname python = x . x anaconda # 列出所有 virtual environment conda info - e # 啟動 virtual environment source activate yourenvname # 安裝 package (我覺得使用 pip 好像比較簡單！) conda install - n yourenvname [ package ] # 注意：如果沒有加 \"-n yourenvname\"，則套件會被安裝到 root env # 停止 virtual environment source deactivate # 刪除 virtual environment conda remove - n yourenvname -- all Reference: Create virtual environments for python with conda","tags":"Python","title":"Creating Virtual Environment Using Conda"},{"url":"http://victorgau.github.io/setting-up-pelican-for-github-pages.html","text":"(adsbygoogle = window.adsbygoogle || []).push({}); Installing Pelican: To install pelican, run the following command. $ pip install pelican If you plan to use markdown to write articles, please also install markdown. $ pip install markdown Creating blog with pelican-quickstart : To create your blog, cd to the root directory of your blog and run pelican-quickstart Victors-MacBook:code victor $ cd blog Victors-MacBook:blog victor $ pwd /Users/victor/code/blog Victors-MacBook:blog victor $ pelican-quickstart Welcome to pelican-quickstart v3.6.3. This script will help you create a new Pelican-based website. Please answer the following questions so this script can generate the files needed by Pelican. > Where do you want to create your new web site? [ . ] > What will be the title of this web site? Victor Gau > Who will be the author of this web site? Victor Gau > What will be the default language of this web site? [ en ] > Do you want to specify a URL prefix? e.g., http://example.com ( Y/n ) > What is your URL prefix? ( see above example ; no trailing slash ) http://victorgau.github.io > Do you want to enable article pagination? ( Y/n ) > How many articles per page do you want? [ 10 ] > What is your time zone? [ Europe/Paris ] Asia/Taipei > Do you want to generate a Fabfile/Makefile to automate generation and publishing? ( Y/n ) > Do you want an auto-reload & simpleHTTP script to assist with theme and site development? ( Y/n ) > Do you want to upload your website using FTP? ( y/N ) > Do you want to upload your website using SSH? ( y/N ) > Do you want to upload your website using Dropbox? ( y/N ) > Do you want to upload your website using S3? ( y/N ) > Do you want to upload your website using Rackspace Cloud Files? ( y/N ) > Do you want to upload your website using GitHub Pages? ( y/N ) Y > Is this your personal page ( username.github.io ) ? ( y/N ) Y Done. Your new project is available at /Users/victor/code/blog Victors-MacBook:blog victor $ Since I'd like to put my blog onto github, the answers to the github related questions are 'Yes'. The tree structure after running pelican-quickstart is as follows: Victors-MacBook:blog victor $ tree . ├── Makefile ├── content ├── develop_server.sh ├── fabfile.py ├── output ├── pelicanconf.py └── publishconf.py 2 directories, 5 files Victors-MacBook:blog victor $ There are two configuration files in the directory: pelicanconf.py is intended to be used for previewing. publishconf.py is intended to be used for publishing. Makefile and fabfile.py are intended for automation. content is the directory for the source code of your articles. output is the directory for compilation output, i.e., the html files of your static blog. Pelican Themes: You can easily change the style of your blog by setting a specific theme in the configuration file. To do so, you need to download the themes first. You can do it by running the following command. $ git clone -- recursive https : // github . com / getpelican / pelican - themes ./ pelican - themes After downloading the theme files, put the following line in pelicanconf.py or publishconf.py to use the theme. THEME = \"pelican-themes/pelican-bootstrap3\" Plugins: Pelican supports varied plugins. You can use the plugin to render math equations, embed iPython notebook into the post, etc. To use plugins, download them first by running the following command. git clone https : // github . com / getpelican / pelican - plugins . git And then, put the following settings into pelicanconf.py or publishconf.py . The following is an example to use render_math plugin. PLUGIN_PATHS = [ 'pelican-plugins' ] PLUGINS = [ 'render_math' ] Testing Math Equation: \\(E=MC&#94;2\\) If you are using markdown, syntax highlighting is already supported. Testing Syntax Highlighting: a = 1 b = 2 print a + b Fabric: To use fabric for blog automation, please reference to Nafiul's article . Disqus: Most pelican themes natively support disqus to allow people comment on your post. To use disqus, you need to register an account at disqus.com . And then, add your site from disqus.com/admin to get your sitename. Add the sitename into the configuration file, pelicanconf.py or publishconf.py . DISQUS_SITENAME = 'YourSiteName' After setting the DISQUS_SITENAME and re-compilation, You should see disqus comment at the end of your post. Note that you would not see disqus comment when testing in the local environment. References: Install and deploy a Pelican blog using Fabric - Part 1: local environment Install and deploy a Pelican blog using Fabric - Part 2: installation and configuration Install and deploy a Pelican blog using Fabric - Part 3: Fabric Install and deploy a Pelican blog using Fabric - Part 4: workflow, extras and conclusion Making a Static Blog with Pelican Configuring Pelican Static Blog if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); var location_protocol = (false) ? 'https' : document.location.protocol; if (location_protocol !== 'http' && location_protocol !== 'https') location_protocol = 'https:'; mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"Python","title":"Setting up Pelican for Github Pages"}]}